{"ast":null,"code":"import { authenticateUser } from \"app/auth/auth-utils\";\nimport { LoginInput } from \"app/auth/validations\";\nexport default async function login(input, ctx = {}) {\n  // This throws an error if input is invalid\n  const {\n    email,\n    password\n  } = LoginInput.parse(input); // This throws an error if credentials are invalid\n\n  const user = await authenticateUser(email, password);\n  await ctx.session.create({\n    userId: user.id,\n    roles: [user.role]\n  });\n  return user;\n}","map":{"version":3,"sources":["/Users/loufi/Documents/Epitech/Paas/byop/api/.blitz/caches/dev/app/_resolvers/auth/mutations/login.ts"],"names":["authenticateUser","LoginInput","login","input","ctx","email","password","parse","user","session","create","userId","id","roles","role"],"mappings":"AACA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2C,sBAA3C;AAEA,eAAe,eAAeC,KAAf,CAAqBC,KAArB,EAA4CC,GAAiC,GAAG,EAAhF,EAAoF;AACjG;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,UAAU,CAACM,KAAX,CAAiBJ,KAAjB,CAA5B,CAFiG,CAIjG;;AACA,QAAMK,IAAI,GAAG,MAAMR,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAnC;AAEA,QAAMF,GAAG,CAACK,OAAJ,CAAaC,MAAb,CAAoB;AAAEC,IAAAA,MAAM,EAAEH,IAAI,CAACI,EAAf;AAAmBC,IAAAA,KAAK,EAAE,CAACL,IAAI,CAACM,IAAN;AAA1B,GAApB,CAAN;AAEA,SAAON,IAAP;AACD","sourcesContent":["import { SessionContext } from \"blitz\"\nimport { authenticateUser } from \"app/auth/auth-utils\"\nimport { LoginInput, LoginInputType } from \"app/auth/validations\"\n\nexport default async function login(input: LoginInputType, ctx: { session?: SessionContext } = {}) {\n  // This throws an error if input is invalid\n  const { email, password } = LoginInput.parse(input)\n\n  // This throws an error if credentials are invalid\n  const user = await authenticateUser(email, password)\n\n  await ctx.session!.create({ userId: user.id, roles: [user.role] })\n\n  return user\n}\n"]},"metadata":{},"sourceType":"module"}