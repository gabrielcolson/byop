{"ast":null,"code":"// This imports the isomorphicHandler\nimport resolverModule from 'app/auth/mutations/login';\nimport { getAllMiddlewareForModule } from '@blitzjs/core';\nimport { rpcApiHandler } from '@blitzjs/server';\nimport path from 'path'; // Ensure these files are not eliminated by trace-based tree-shaking (like Vercel)\n\npath.resolve(\"next.config.js\");\npath.resolve(\"blitz.config.js\");\npath.resolve(\".next/__db.js\"); // End anti-tree-shaking\n\nlet db;\nlet connect;\n\ntry {\n  var _require$connect;\n\n  db = require('db').default;\n  connect = (_require$connect = require('db').connect) !== null && _require$connect !== void 0 ? _require$connect : () => db.$connect ? db.$connect() : db.connect();\n} catch (err) {}\n\nexport default rpcApiHandler(resolverModule, getAllMiddlewareForModule(resolverModule), () => db && connect());\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};","map":{"version":3,"sources":["/Users/loufi/Documents/Epitech/Paas/byop/api/.blitz/caches/dev/pages/api/auth/mutations/login.ts"],"names":["resolverModule","getAllMiddlewareForModule","rpcApiHandler","path","resolve","db","connect","require","default","$connect","err","config","api","externalResolver"],"mappings":"AACA;AACA,OAAOA,cAAP,MAA2B,0BAA3B;AACA,SAAQC,yBAAR,QAAwC,eAAxC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACAA,IAAI,CAACC,OAAL,CAAa,gBAAb;AACAD,IAAI,CAACC,OAAL,CAAa,iBAAb;AACAD,IAAI,CAACC,OAAL,CAAa,eAAb,E,CACA;;AAEA,IAAIC,EAAJ;AACA,IAAIC,OAAJ;;AACA,IAAI;AAAA;;AACFD,EAAAA,EAAE,GAAGE,OAAO,CAAC,IAAD,CAAP,CAAcC,OAAnB;AACAF,EAAAA,OAAO,uBAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,OAAjB,+DAA6B,MAAMD,EAAE,CAACI,QAAH,GAAcJ,EAAE,CAACI,QAAH,EAAd,GAA8BJ,EAAE,CAACC,OAAH,EAAxE;AACD,CAHD,CAGC,OAAMI,GAAN,EAAU,CAAE;;AACb,eAAeR,aAAa,CAC1BF,cAD0B,EAE1BC,yBAAyB,CAACD,cAAD,CAFC,EAG1B,MAAMK,EAAE,IAAIC,OAAO,EAHO,CAA5B;AAKA,OAAO,MAAMK,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,gBAAgB,EAAE;AADf;AADe,CAAf","sourcesContent":["\n// This imports the isomorphicHandler\nimport resolverModule from 'app/auth/mutations/login'\nimport {getAllMiddlewareForModule} from '@blitzjs/core'\nimport {rpcApiHandler} from '@blitzjs/server'\nimport path from 'path'\n\n// Ensure these files are not eliminated by trace-based tree-shaking (like Vercel)\npath.resolve(\"next.config.js\")\npath.resolve(\"blitz.config.js\")\npath.resolve(\".next/__db.js\")\n// End anti-tree-shaking\n\nlet db: any\nlet connect: any\ntry {\n  db = require('db').default\n  connect = require('db').connect ?? (() => db.$connect ? db.$connect() : db.connect())\n}catch(err){}\nexport default rpcApiHandler(\n  resolverModule,\n  getAllMiddlewareForModule(resolverModule),\n  () => db && connect(),\n)\nexport const config = {\n  api: {\n    externalResolver: true,\n  },\n}\n"]},"metadata":{},"sourceType":"module"}